---
interface Props {
  label: string;
  class?: string;
}

const { label, class: className } = Astro.props;
---

<div
  x-data="{ isOpen: false }"
  class:list={["relative text-left", className]}
  @click.away="isOpen = false"
>
  <div>
    <button
      type="button"
      class="text-primary hover:text-secondary inline-flex w-full cursor-pointer justify-center gap-x-1.5 rounded-md px-3 py-2 transition-colors duration-200"
      id="menu-button"
      aria-expanded="true"
      aria-haspopup="true"
      @click="isOpen = !isOpen"
    >
      {label}
      <svg
        :class="{ 'rotate-180': isOpen }"
        class="-mr-1 size-5 text-gray-400 transition-transform duration-200"
        viewBox="0 0 20 20"
        fill="currentColor"
        aria-hidden="true"
        data-slot="icon"
      >
        <path
          fill-rule="evenodd"
          d="M5.22 8.22a.75.75 0 0 1 1.06 0L10 11.94l3.72-3.72a.75.75 0 1 1 1.06 1.06l-4.25 4.25a.75.75 0 0 1-1.06 0L5.22 9.28a.75.75 0 0 1 0-1.06Z"
          clip-rule="evenodd"></path>
      </svg>
    </button>
  </div>

  <div
    x-show="isOpen"
    x-transition:enter="transition ease-out duration-100 transform"
    x-transition:enter-start="opacity-0 scale-95"
    x-transition:enter-end="opacity-100 scale-100"
    x-transition:leave="transition ease-in duration-75 transform"
    x-transition:leave-start="opacity-100 scale-100"
    x-transition:leave-end="opacity-0 scale-95"
    class="bg-light ring-primary/5 absolute right-0 z-20 mt-2 min-w-max origin-top-right rounded-md py-1 pl-6 text-right shadow-lg ring-1 focus:outline-hidden"
    role="menu"
    aria-orientation="vertical"
    aria-labelledby="menu-button"
    tabindex="-1"
  >
    <div class="py-1" role="none">
      <slot />
    </div>
  </div>
</div>
